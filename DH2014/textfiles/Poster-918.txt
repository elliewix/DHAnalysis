DHArchive
dharchive
.org
 Print
 XML
Speaking in Code

    
Category:
Poster

      
Session:
1

      
Date:
2014-07-10
Time:
14:00:00

      
Room:
Amphipôle Common Area

    

        
Nowviskie
,
									
Bethany

        

          

        
University of Virginia Library, United States of America 

      

      

        
Rochester
,
									
Eric

        

          

        
University of Virginia Library, United States of America 

      

      

        
Graham
,
									
Wayne

        

          

        

      

      

        
Boggs
,
									
Jeremy

        

          

        
University of Virginia Library, United States of America 

      

      

        
McClure
,
									
David

        

          

        
University of Virginia Library, United States of America 

      

      

        
Bailey
,
									
Scott

        

          

        
University of Virginia Library, United States of America 

      

    

  

  

  

  

  

  
Many digital humanities projects are collaborations involving not only
traditionally-employed scholars, but also technologists and administrative staff. These
groups all have their own traditions of discourse, evolving methodologies, metrics of
success, sources of recognition, and avenues for promotion. Any point of difference can
become a source of useful and creative energy, or a nexus of misunderstanding and
conflict.


  
The gaps in communication that these differences open can be deep and broad,
even among humanities-trained software developers and the scholars with whom they
collaborate. Much (not all) knowledge advances in software development through
hands-on, journeyman learning experiences and the iterative, often-collaborative
development of built objects and systems. Much (not all) knowledge advances in
humanities scholarship through fixed and fluid kinds of academic discourse: referential,
prosy, often agonistic. Divisions can exist in style and practice, even when the subjects
and objects of humanities inquiry are the same. What approaches might bridge the gaps
between tacit knowledge exchange and the writing of humanities theory and
interpretation? Can we move past an historical moment in the academy, in which the
onus seems to be almost entirely placed on archivally and theoretically trained
humanities scholars to become tech-savvy digital humanist, in order to build a
concomitant sense of momentum, responsibility, and opportunity in our community of
DH software engineers? Can we build greater community itself, just by making a space in
which such problems are addressed?


  
In early November 2013, the Scholars’ Lab at the University of Virginia Library
hosted an event called “Speaking in Code”—a two-day, high-level summit for
approximately 30 advanced humanities software developers. Participants were selected
on the basis of their demonstrated experience in digital humanities software
development, their interest in advancing solutions to the problems raised by the summit,
and the disciplinary and cultural diversity they promised bring to the conversation. The
Scholars’ Lab team also made a clear and explicit call for participation by developers who
are women, people of color, queer/LGBT, or otherwise under-represented among the
ranks of digital humanities programmers, and we were well pleased at the response. (For
instance, 12 of our 30 participants identified as women and 4 volunteered that they are
LGBT.) Besides the unusual level of gender diversity at the event, we believe it was
unique in other ways. Our summit—supported by generous grants from the National
Endowment for the Humanities and the UVa Library—was the first focused meeting to
address scholarly and social implications of tacit knowledge exchange in the digital
humanities.


  

First-day discussions at “Speaking in Code” (led by Bethany Nowviskie, William J.
Turkel, Stéfan Sinclair, Mia Ridge, and Hugh Cayless) addressed core problems and
activities in humanities computing. These included: physical and digital embodiment,
and our unspoken understandings of them, as made evident in code; how best to take
advantage of moments of fruitful rupture between design and development phases in DH
work; challenges in crafting humanistic models for the representation and procedural
analysis of human language; and methods by which developers and metadata specialists
grapple with other kinds of ambiguity, or “messy understandings,” in cultural heritage
information. The second day started with concrete project pitches, responding to
day-one conversation and offered by participants in lightning rounds. This was followed
by work on some of the projects that were pitched, conducted in small groups, with an
eye both toward making immediate interventions in the field and seeding longer-term,
collaborative undertakings. Our DH 2014 poster will present outcomes from “Speaking in
Code.”


  
The underlying question of our summit was this: how might we—at a moment
when scholarly interest in humanities computing is growing by leaps and
bounds—bring longstanding technical conversations into more open, inclusive
humanities discourse? “Speaking in Code” foregrounded the intellectual dimensions of
DH craftsmanship but—importantly, unusually, and we think as a necessary first step to
fostering discussion in venues legible and friendly to scholars and developers alike—we
started with a meeting organized and conducted on software developers’ own terms.

  
References

  
Collins, Harry M. 
(2010). Tacit and Explicit Knowledge. Chicago: The University of Chicago Press.
          

  
Liu, Alan 
(2012). “ The state of the digital humanities: A report and a critique. ” Arts and
            Humanities in Higher Education. Feb/Apr 2012 11: 8-41.
          

  
Mattern, Shannon
 (2011). “Revisiting Craft I: Teaching the Connections Between Thinking and
            Making.” 18 August 2011. <http://www.wordsinspace.net/wordpress/2011/08/18/revisiting-craft-i-
            teaching-the-connections-between-thinking-and-making/

  
Mattern, Shannon
 (2011). “Revisiting Craft II: Tools of Craftsmanship.” 18 August 2011.
            <http://www.wordsinspace.net/wordpress/2011/08/18/revisiting-craft-2-tools-and-methods-
            of-craftsmanship/>
          

  
Oram, Andy, and Greg Wilson
 (2007). Beautiful Code: Leading Programmers Explain How They
            Think (Theory in Practice). O’Reilly Media, Inc..
          

  
Polanyi, Michael
 (1958). Personal Knowledge: Towards a Post-Critical Philosophy. Chicago:
            University of Chicago Press.
          

  
Polanyi, Michael
 (1966). The Tacit Dimension. Chicago: University of Chicago Press, 1966.
            Scholars’ Lab. Speaking in Code. Scholars’ Lab. 2013. Web. 1 Nov 2013.
            <http://codespeak.scholarslab.org/>

  
Wardrip-Fruin
 (2009), Noah. Expressive processing: digital fictions, computer games, and
            software studies. Cambridge, Mass.: MIT Press

  
Wood, Nicola, et al 
(2009). “A Tacit Understanding: The Designer's Role in Capturing and Passing
            on the Skilled Knowledge of Craftsmen.” Working Paper, Art and Design Research
            Centre, Sheffield Hallam University.
            <http://www.archive.org/details/A TacitUnderstanding> 

